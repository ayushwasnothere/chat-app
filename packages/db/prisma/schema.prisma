generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())

  contacts  Contact[] @relation("UserContacts")
  addedBy   Contact[] @relation("AddedContacts")

  conversations ConversationParticipant[]
  messages      Message[]
}

model Contact {
  id        Int    @id @default(autoincrement())
  userId    String
  contactId String
  createdAt DateTime @default(now())

  user      User   @relation("AddedContacts", fields: [userId], references: [id])
  contact   User   @relation("UserContacts", fields: [contactId], references: [id])

  @@unique([userId, contactId])
}

model Conversation {
  id            String   @id @default(uuid())
  name          String?
  isGroup       Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  participants  ConversationParticipant[]
  messages      Message[]
}

model ConversationParticipant {
  userId         String
  conversationId String
  isAdmin        Boolean @default(false)
  
  user          User         @relation(fields: [userId], references: [id])
  conversation  Conversation @relation(fields: [conversationId], references: [id])

  @@id([userId, conversationId])
}

model Message {
  id             Int      @id @default(autoincrement())
  senderId       String
  conversationId String
  content        String
  createdAt      DateTime @default(now())

  sender        User         @relation(fields: [senderId], references: [id])
  conversation  Conversation @relation(fields: [conversationId], references: [id])
}

