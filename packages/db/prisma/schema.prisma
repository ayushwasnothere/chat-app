// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  password String
  name String
  createdAt DateTime @default(now())
  contacts Contact[]
  messages Message[]
  conversations UserConversations[]
}

model Contact {
  id Int @id @default(autoincrement())
  contactName String
  username String
  authorId String
  author User @relation(fields: [authorId], references:[id])
}

model UserConversations {
  userId  String
  conversationId String
  user User @relation(fields: [userId],references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id])
  @@id([userId,conversationId])
}

model Conversation {
  id String @id @default(uuid())
  participants UserConversations[] 
  messages ConvoLink[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id Int @id @default(autoincrement())
  senderId String
  sender User @relation(fields: [senderId], references: [id])
  content String
  createdAt DateTime @default(now())
  links ConvoLink[]
}

model ConvoLink {
  id Int @id @default(autoincrement())
  messageId Int
  conversationId String
  conversation Conversation @relation(fields: [conversationId],references: [id])
  message Message @relation(fields: [messageId], references: [id])
}

